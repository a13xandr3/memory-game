{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ScreenService {\n  constructor(zone, http) {\n    this.zone = zone;\n    this.http = http;\n    this.screenSize$ = new BehaviorSubject({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      img: window.innerWidth >= 360 && window.innerWidth < 575 ? '../../assets/img/header-sm.jpg' : window.innerWidth >= 576 && window.innerWidth < 767 ? '../../assets/img/header-sm.jpg' : window.innerWidth >= 768 && window.innerWidth < 991 ? '../../assets/img/header-md.jpg' : window.innerWidth >= 992 && window.innerWidth < 1199 ? '../../assets/img/header-lg.jpg' : window.innerWidth >= 1200 && window.innerWidth < 1399 ? '../../assets/img/header-xl.jpg' : window.innerWidth >= 1400 ? '../../assets/img/header-xxl.jpg' : ''\n    });\n    this.screenSizeObs$ = this.screenSize$.asObservable();\n    /*\n    fromEvent(window, 'resize').subscribe(() => {\n      this.zone.run(() => {\n        this.screenSize$.next({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          img: 'x'\n        });\n      });\n    });\n    */\n  }\n\n  getNiveis() {\n    return this.http.get('assets/niveis.json');\n  }\n  static {\n    this.ɵfac = function ScreenService_Factory(t) {\n      return new (t || ScreenService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ScreenService,\n      factory: ScreenService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAA+B,MAAM;;;AAQ7D,OAAM,MAAOC,aAAa;EAmBxBC,YACYC,IAAY,EACZC,IAAgB;IADhB,SAAI,GAAJD,IAAI;IACJ,SAAI,GAAJC,IAAI;IAnBR,gBAAW,GAAG,IAAIJ,eAAe,CAIlC;MACDK,KAAK,EAAEC,MAAM,CAACC,UAAU;MACxBC,MAAM,EAAEF,MAAM,CAACG,WAAW;MAC1BC,GAAG,EAAEJ,MAAM,CAACC,UAAU,IAAI,GAAG,IAAID,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,gCAAgC,GACtFD,MAAM,CAACC,UAAU,IAAI,GAAG,IAAID,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,gCAAgC,GACtFD,MAAM,CAACC,UAAU,IAAI,GAAG,IAAID,MAAM,CAACC,UAAU,GAAG,GAAG,GAAI,gCAAgC,GACvFD,MAAM,CAACC,UAAU,IAAI,GAAG,IAAID,MAAM,CAACC,UAAU,GAAG,IAAI,GAAI,gCAAgC,GACxFD,MAAM,CAACC,UAAU,IAAI,IAAI,IAAID,MAAM,CAACC,UAAU,GAAG,IAAI,GAAI,gCAAgC,GACzFD,MAAM,CAACC,UAAU,IAAI,IAAI,GAAG,iCAAiC,GAAG;KAC1E,CAAC;IAEF,mBAAc,GAAQ,IAAI,CAACI,WAAW,CAACC,YAAY,EAAE;IAMnD;;;;;;;;;;;EAWF;;EAEAC,SAAS;IACP,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAY,oBAAoB,CAAC;EACvD;;;uBAtCWb,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAc,SAAbd,aAAa;MAAAe,YAHZ;IAAM;EAAA","names":["BehaviorSubject","ScreenService","constructor","zone","http","width","window","innerWidth","height","innerHeight","img","screenSize$","asObservable","getNiveis","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/alexandreesteves/angular/memory-game/src/core/service/screen.service.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { NivelJson } from '../model/nivel.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ScreenService {\n\n  private screenSize$ = new BehaviorSubject<{ \n      width: number; \n      height: number;\n      img: string;\n      }>({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        img: window.innerWidth >= 360 && window.innerWidth < 575 ? '../../assets/img/header-sm.jpg' : \n             window.innerWidth >= 576 && window.innerWidth < 767 ? '../../assets/img/header-sm.jpg' : \n             window.innerWidth >= 768 && window.innerWidth < 991 ?  '../../assets/img/header-md.jpg' :\n             window.innerWidth >= 992 && window.innerWidth < 1199 ?  '../../assets/img/header-lg.jpg' :\n             window.innerWidth >= 1200 && window.innerWidth < 1399 ?  '../../assets/img/header-xl.jpg' :\n             window.innerWidth >= 1400 ? '../../assets/img/header-xxl.jpg' : ''\n  });\n\n  screenSizeObs$: any = this.screenSize$.asObservable();\n\n  constructor(\n      private zone: NgZone,\n      private http: HttpClient\n    ) {\n    /*\n    fromEvent(window, 'resize').subscribe(() => {\n      this.zone.run(() => {\n        this.screenSize$.next({\n          width: window.innerWidth,\n          height: window.innerHeight,\n          img: 'x'\n        });\n      });\n    });\n    */\n  }\n\n  getNiveis(): Observable<NivelJson> {\n    return this.http.get<NivelJson>('assets/niveis.json');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}